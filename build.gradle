// Based on https://github.com/grpc/grpc-java/blob/master/examples/build.gradle

plugins {
    id 'application'
    id 'com.google.protobuf' version '0.8.15'
    id "com.palantir.docker" version "0.26.0"
    id 'idea'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8

def grpcVersion = '1.36.0'
def protobufVersion = '3.15.6'
def protocVersion = protobufVersion

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20210307'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'

    // https://mvnrepository.com/artifact/io.etcd/jetcd-core
    implementation group: 'io.etcd', name: 'jetcd-core', version: '0.5.7'

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    // https://mvnrepository.com/artifact/net.spy/spymemcached
    implementation group: 'net.spy', name: 'spymemcached', version: '2.12.3'

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:3.4.0"
}


protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

task authentication(type:JavaExec) {
    main = "AuthenticationServer"
    classpath = sourceSets.main.runtimeClasspath
}

task geo(type:JavaExec) {
    main = "GeoServer"
    classpath = sourceSets.main.runtimeClasspath
}
